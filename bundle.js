(()=>{"use strict";var n={994:(n,e,t)=>{t.d(e,{Z:()=>B});var r=t(507),a=t.n(r),o=t(476),i=t.n(o),s=t(678),c=t.n(s),A=t(591),l=t(429),u=t(909),d=t(686),f=t(280),g=t(450),p=t(536),h=t(34),C=i()(a()),v=c()(A),b=c()(l),m=c()(u),y=c()(d),x=c()(f),w=c()(g),k=c()(p),S=c()(h);C.push([n.id,'*,*::before,*::after{box-sizing:border-box;margin:0px;padding:0px}:visited{color:inherit}a,a:visited{text-decoration:none;display:block;color:inherit}body{color:#000;font-size:1rem;font-family:"Pangolin";font-style:normal;font-weight:400;letter-spacing:.1em}.button{display:flex;align-items:center;justify-content:center;cursor:pointer;font-weight:800;background-color:#ff0;border-radius:4px;border:none;padding:5px;margin:5px;line-height:1.1;letter-spacing:inherit;min-height:32px}b{color:#ff0;display:flex;align-items:center}#canvas{margin-top:50px;cursor:crosshair;border:dashed 5px #ff0}#rad{width:35px;height:30px;background:gray;border:none;color:#ff0;font-weight:inherit;margin:5px;text-align:center;border-radius:4px}#menu{padding:5px;height:auto;width:100%;top:0px;left:0px;position:fixed;background:green}#color{margin:0 3px 0;width:25px;min-height:30px;padding:0;border:1px solid #000;border:none;vertical-align:middle}#settings{display:flex;align-items:center}#profile_pic{display:none}.burger-btn,.close{display:none}@media screen and (max-width: 420px){body{overflow:hidden;position:fixed}#settings{font-size:1.5rem}#settings .button{display:block}.burger-btn{background:url('+v+");display:block}#settings .button,.burger-btn{position:absolute;right:0px;width:50px;height:50px;background-repeat:no-repeat;background-size:auto;background-position:center;background-color:#ff0;background-size:contain;color:transparent;border:1px solid #000}.burger-btn,.close{top:-5px;right:0;margin:5px;padding:5px;border-radius:4px}.close{background:url("+b+")}.eraser{top:55px;background:url("+m+")}.clear{top:110px;background:url("+y+")}.download{top:165px;background:url("+x+")}.save{top:220px;background:url("+w+")}.undo{top:275px;background:url("+k+")}.invert{top:330px;background:url("+S+")}}","",{version:3,sources:["webpack://./style.scss"],names:[],mappings:"AAAA,qBAGC,qBAAA,CACA,UAAA,CACA,WAAA,CAID,SACC,aAAA,CAGD,YACC,oBAAA,CACA,aAAA,CACE,aAAA,CAGH,KACE,UAAA,CACA,cAAA,CACA,sBAAA,CACA,iBAAA,CACA,eAAA,CACA,mBAAA,CAGF,QACG,YAAA,CACA,kBAAA,CACA,sBAAA,CACA,cAAA,CACA,eAAA,CACA,qBAAA,CACA,iBAAA,CACA,WAAA,CACA,WAAA,CACA,UAAA,CACA,eAAA,CACA,sBAAA,CACA,eAAA,CAIH,EACG,UAAA,CACA,YAAA,CACA,kBAAA,CAIH,QACG,eAAA,CACA,gBAAA,CACA,sBAAA,CAEH,KACG,UAAA,CACA,WAAA,CACA,eAAA,CACA,WAAA,CACA,UAAA,CACA,mBAAA,CACA,UAAA,CACA,iBAAA,CACA,iBAAA,CAEH,MACG,WAAA,CACA,WAAA,CACA,UAAA,CACA,OAAA,CACA,QAAA,CAEA,cAAA,CACA,gBAAA,CAGH,OACG,cAAA,CACA,UAAA,CACA,eAAA,CACA,SAAA,CACA,qBAAA,CACA,WAAA,CACA,qBAAA,CAIH,UAEE,YAAA,CACA,kBAAA,CAGF,aACG,YAAA,CAEH,mBACM,YAAA,CAKN,qCACG,KACG,eAAA,CACA,cAAA,CAEH,UACG,gBAAA,CAGH,kBACG,aAAA,CAEH,YACE,kDAAA,CACA,aAAA,CAGH,8BACG,iBAAA,CACA,SAAA,CACA,UAAA,CACA,WAAA,CACA,2BAAA,CACA,oBAAA,CACA,0BAAA,CACA,qBAAA,CACA,uBAAA,CACA,iBAAA,CACA,qBAAA,CAEH,mBAEI,QAAA,CACA,OAAA,CACA,UAAA,CACA,WAAA,CACA,iBAAA,CAKH,OACE,kDAAA,CAIH,QACG,QAAA,CACA,kDAAA,CAIH,OACG,SAAA,CACA,kDAAA,CAEH,UACG,SAAA,CACA,kDAAA,CAGH,MACG,SAAA,CACA,kDAAA,CAEH,MACG,SAAA,CACA,kDAAA,CAEH,QACG,SAAA,CACA,kDAAA,CAAA",sourcesContent:["*,\n*::before,\n*::after {\n\tbox-sizing: border-box;\n\tmargin: 0px;\n\tpadding: 0px;\n}\n\n\n:visited {\n\tcolor: inherit;\t\n}\n\na, a:visited {\n\ttext-decoration: none;\n\tdisplay: block;\t\n   color: inherit;\n}\n\nbody {\n  color: black;\n  font-size: 1rem;\n  font-family: 'Pangolin';\n  font-style: normal;\n  font-weight: 400;\n  letter-spacing: 0.1em;\n \n}\n.button {\n   display: flex;\n   align-items: center;\n   justify-content: center;\n   cursor: pointer;\n   font-weight: 800;\n   background-color: yellow;\n   border-radius: 4px;\n   border: none;\n   padding: 5px;\n   margin: 5px;\n   line-height: 1.1;\n   letter-spacing: inherit;\n   min-height: 32px;\n\n}\n\nb {\n   color: yellow;\n   display: flex;\n   align-items: center;\n}\n\n\n#canvas {\n   margin-top: 50px;\n   cursor: crosshair;\n   border: dashed 5px yellow;\n}\n#rad {\n   width: 35px;\n   height: 30px;\n   background: grey;\n   border: none;\n   color: yellow;\n   font-weight: inherit;\n   margin: 5px;\n   text-align: center;\n   border-radius: 4px;\n}\n#menu {\n   padding: 5px;\n   height: auto;\n   width: 100%;\n   top: 0px;\n   left: 0px;\n   // background: #323232;\n   position: fixed;\n   background: green;\n}\n\n#color {\n   margin: 0 3px 0;\n   width: 25px;\n   min-height: 30px;\n   padding: 0;\n   border: 1px solid black;\n   border: none;\n   vertical-align: middle;\n\n}\n\n#settings {\n \n  display: flex;\n  align-items: center;\n}\n\n#profile_pic {\n   display: none;\n}\n.burger-btn, .close {\n      display: none;\n}\n\n\n\n@media screen and (max-width: 420px) {\n   body {\n      overflow: hidden;\n      position: fixed;\n   }\n   #settings {\n      font-size: 1.5rem;\n   }\n   \n   #settings .button {\n      display: block;\n   }\n   .burger-btn {\n     background: url('./img/burger-menu.svg');\n     display: block;\n    }  \n  \n  #settings .button, .burger-btn {\n     position:absolute;\n     right: 0px;\n     width: 50px;\n     height: 50px;\n     background-repeat: no-repeat;\n     background-size: auto;\n     background-position: center;\n     background-color: yellow;\n     background-size: contain;\n     color: transparent;\n     border: 1px solid black;\n  }\n  .burger-btn, .close {\n      // display: none;\n      top: -5px;\n      right: 0;\n      margin: 5px;\n      padding: 5px;\n      border-radius: 4px;\n   }\n  \n   \n      \n   .close {\n     background: url('./img/icon-close.png');\n   //   display: block;\n   }   \n      \n  .eraser{\n     top: 55px;\n     background: url('./img/eraser.png');\n\n     \n  }\n  .clear{\n     top: 110px;\n     background: url('./img/clear.svg');\n  }\n  .download{\n     top: 165px;\n     background: url('./img/download.svg');\n  }\n  \n  .save{\n     top: 220px;\n     background: url('./img/save.svg');\n  }\n  .undo{\n     top: 275px;\n     background: url('./img/undo.svg');\n  }\n  .invert{\n     top: 330px;\n     background: url('./img/invert.svg');\n  }\n//  .burger-btn {\n//       display: block;\n//    }\n\n}\n\n\n\n"],sourceRoot:""}]);const B=C},476:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t=n(e);return e[2]?"@media ".concat(e[2]," {").concat(t,"}"):t})).join("")},e.i=function(n,t,r){"string"==typeof n&&(n=[[null,n,""]]);var a={};if(r)for(var o=0;o<this.length;o++){var i=this[o][0];null!=i&&(a[i]=!0)}for(var s=0;s<n.length;s++){var c=[].concat(n[s]);r&&a[c[0]]||(t&&(c[2]?c[2]="".concat(t," and ").concat(c[2]):c[2]=t),e.push(c))}},e}},507:n=>{function e(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,r=new Array(e);t<e;t++)r[t]=n[t];return r}n.exports=function(n){var t,r,a=(r=4,function(n){if(Array.isArray(n))return n}(t=n)||function(n,e){var t=n&&("undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"]);if(null!=t){var r,a,o=[],i=!0,s=!1;try{for(t=t.call(n);!(i=(r=t.next()).done)&&(o.push(r.value),!e||o.length!==e);i=!0);}catch(n){s=!0,a=n}finally{try{i||null==t.return||t.return()}finally{if(s)throw a}}return o}}(t,r)||function(n,t){if(n){if("string"==typeof n)return e(n,t);var r=Object.prototype.toString.call(n).slice(8,-1);return"Object"===r&&n.constructor&&(r=n.constructor.name),"Map"===r||"Set"===r?Array.from(n):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?e(n,t):void 0}}(t,r)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=a[1],i=a[3];if("function"==typeof btoa){var s=btoa(unescape(encodeURIComponent(JSON.stringify(i)))),c="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(s),A="/*# ".concat(c," */"),l=i.sources.map((function(n){return"/*# sourceURL=".concat(i.sourceRoot||"").concat(n," */")}));return[o].concat(l).concat([A]).join("\n")}return[o].join("\n")}},678:n=>{n.exports=function(n,e){return e||(e={}),"string"!=typeof(n=n&&n.__esModule?n.default:n)?n:(/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n)}},892:(n,e,t)=>{var r,a=function(){var n={};return function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}n[e]=t}return n[e]}}(),o=[];function i(n){for(var e=-1,t=0;t<o.length;t++)if(o[t].identifier===n){e=t;break}return e}function s(n,e){for(var t={},r=[],a=0;a<n.length;a++){var s=n[a],c=e.base?s[0]+e.base:s[0],A=t[c]||0,l="".concat(c," ").concat(A);t[c]=A+1;var u=i(l),d={css:s[1],media:s[2],sourceMap:s[3]};-1!==u?(o[u].references++,o[u].updater(d)):o.push({identifier:l,updater:p(d,e),references:1}),r.push(l)}return r}function c(n){var e=document.createElement("style"),r=n.attributes||{};if(void 0===r.nonce){var o=t.nc;o&&(r.nonce=o)}if(Object.keys(r).forEach((function(n){e.setAttribute(n,r[n])})),"function"==typeof n.insert)n.insert(e);else{var i=a(n.insert||"head");if(!i)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");i.appendChild(e)}return e}var A,l=(A=[],function(n,e){return A[n]=e,A.filter(Boolean).join("\n")});function u(n,e,t,r){var a=t?"":r.media?"@media ".concat(r.media," {").concat(r.css,"}"):r.css;if(n.styleSheet)n.styleSheet.cssText=l(e,a);else{var o=document.createTextNode(a),i=n.childNodes;i[e]&&n.removeChild(i[e]),i.length?n.insertBefore(o,i[e]):n.appendChild(o)}}function d(n,e,t){var r=t.css,a=t.media,o=t.sourceMap;if(a?n.setAttribute("media",a):n.removeAttribute("media"),o&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),n.styleSheet)n.styleSheet.cssText=r;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(r))}}var f=null,g=0;function p(n,e){var t,r,a;if(e.singleton){var o=g++;t=f||(f=c(e)),r=u.bind(null,t,o,!1),a=u.bind(null,t,o,!0)}else t=c(e),r=d.bind(null,t,e),a=function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(t)};return r(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap)return;r(n=e)}else a()}}n.exports=function(n,e){(e=e||{}).singleton||"boolean"==typeof e.singleton||(e.singleton=(void 0===r&&(r=Boolean(window&&document&&document.all&&!window.atob)),r));var t=s(n=n||[],e);return function(n){if(n=n||[],"[object Array]"===Object.prototype.toString.call(n)){for(var r=0;r<t.length;r++){var a=i(t[r]);o[a].references--}for(var c=s(n,e),A=0;A<t.length;A++){var l=i(t[A]);0===o[l].references&&(o[l].updater(),o.splice(l,1))}t=c}}}},622:(n,e,t)=>{n.exports=t.p+"aa1e968874b01bf0e243.woff2"},591:(n,e,t)=>{n.exports=t.p+"5cc298bdc5569baa2380.svg"},686:(n,e,t)=>{n.exports=t.p+"8e118f246f0a2ac58647.svg"},280:(n,e,t)=>{n.exports=t.p+"5c981afccbf1c3d7f6f3.svg"},909:(n,e,t)=>{n.exports=t.p+"34b58acc70a94fa86568.png"},429:(n,e,t)=>{n.exports=t.p+"eb690583bcdb64ef8f5a.png"},34:(n,e,t)=>{n.exports=t.p+"eefafc556f5860580bab.svg"},450:(n,e,t)=>{n.exports=t.p+"a9b279a8606a6af6aa44.svg"},536:(n,e,t)=>{n.exports=t.p+"5148527b33972c73e8bb.svg"}},e={};function t(r){var a=e[r];if(void 0!==a)return a.exports;var o=e[r]={id:r,exports:{}};return n[r](o,o.exports,t),o.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var r=e.getElementsByTagName("script");r.length&&(n=r[r.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),(()=>{var n=t(892),e=t.n(n),r=t(994);function a(n,e){for(var t=0;t<e.length;t++){var r=e[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(n,r.key,r)}}e()(r.Z,{insert:"head",singleton:!1}),r.Z.locals,t(622);var o=function(){function n(){!function(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}(this,n),this.canvas=document.getElementById("canvas"),this.ctx=document.getElementById("canvas").getContext("2d"),this.clearBtn=document.querySelector(".clear"),this.undoBtn=document.querySelector(".undo"),this.eraserBtn=document.querySelector(".eraser"),this.invert=document.querySelector(".invert")}var e,t;return e=n,(t=[{key:"canvasToWindowSize",value:function(){this.canvas.width=window.innerWidth,this.canvas.height=window.innerHeight}},{key:"canvasWhite",value:function(){this.ctx.fillStyle="white",this.ctx.fillRect(0,0,this.canvas.width,this.canvas.height)}},{key:"clearCanvas",value:function(n){var e=n.flags,t=n.stack,r=n.filesManage;this.canvasWhite(),e.isRepaint||(this.canvasToWindowSize(),t.setStory("clear"),r.updateHrefOnCanvas(this.canvas))}},{key:"colorInvert",value:function(n){for(var e=n.flags,t=n.stack,r=n.filesManage,a=this.ctx.getImageData(0,0,this.canvas.width,this.canvas.height),o=0;o<a.data.length;o+=4)a.data[o]=255-a.data[o],a.data[o+1]=255-a.data[o+1],a.data[o+2]=255-a.data[o+2],a.data[o+3]=255;this.ctx.putImageData(a,0,0),e.isRepaint||(t.setStory("invert"),r.updateHrefOnCanvas(this.canvas))}},{key:"eraser",value:function(n){var e=n.flags,t=n.drawing;if(e.isOnErase=!e.isOnErase,e.isOnErase)return t.color="#ffffff",void(this.eraserBtn.style.color="#ffffff");t.color=t.col.value,this.eraserBtn.style.color="#000000"}},{key:"undo",value:function(n){var e=n.stack,t=n.flags,r=n.drawing,a=n.filesManage;if(e.removeLastCommand(),0===e.story.length)return this.undoBtn.disabled=!0,void this.clearCanvas(n);t.isRepaint=!0,this.clearCanvas(n);for(var o=0;o<e.story.length;o++){var i=e.story[o];switch(i){case"clear":this.clearCanvas(n);break;case"newImg":this.ctx.drawImage(a.newImg,0,0);break;case"invert":this.colorInvert(n);break;default:i.forEach((function(n){return r.draw(n)})),this.ctx.beginPath()}}t.isRepaint=!1}}])&&a(e.prototype,t),n}();function i(n,e){for(var t=0;t<e.length;t++){var r=e[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(n,r.key,r)}}var s=function(){function n(e){!function(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}(this,n),this.rad=document.getElementById("rad"),this.col=document.getElementById("color"),this.radius=document.getElementById("rad").value,this.color=document.getElementById("color").value,this.ctx=e.ctx,this.undoBtn=e.undoBtn,this.canvas=e.canvas}var e,t;return e=n,(t=[{key:"draw",value:function(n){var e=n.x,t=n.y,r=n.radius,a=n.color;e-=r,t-=r,this.ctx.fillStyle=this.ctx.strokeStyle=a,this.ctx.lineTo(e,t-50),this.ctx.lineWidth=2*r,this.ctx.stroke(),this.ctx.beginPath(),this.ctx.arc(e,t-50,r,0,2*Math.PI),this.ctx.fill(),this.ctx.beginPath(),this.ctx.moveTo(e,t-50)}},{key:"drawPoint",value:function(n,e){var t=e.flags,r=e.stack;if(t.isErasing&&(this.color="#ffff"),t.isDragging){var a={x:n.pageX,y:n.pageY,radius:this.radius,color:this.color};this.draw(a),r.saveToLineStory(a)}}},{key:"engage",value:function(n,e){var t=e.flags;t.isOverCanvas&&(t.isDragging=!0)}},{key:"disengage",value:function(n,e){var t=e.flags,r=e.filesManage,a=e.stack;t.isOverCanvas&&(r.updateHrefOnCanvas(this.canvas),this.ctx.beginPath(),a.saveLineStory(),a.lineStory=[],this.undoBtn.disabled=!1)}}])&&i(e.prototype,t),n}();function c(n,e){for(var t=0;t<e.length;t++){var r=e[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(n,r.key,r)}}var A=function(){function n(){!function(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}(this,n),this.newImg="",this.saveImg=document.getElementById("save"),this.loadImg=document.getElementById("profile_pic")}var e,t;return e=n,(t=[{key:"updateHrefOnCanvas",value:function(n){var e=this;n.toBlob((function(n){var t=URL.createObjectURL(n);URL.revokeObjectURL(e.saveImg.href),e.saveImg.href=t}),"image/jpeg",.95)}},{key:"loadImgFromHDD",value:function(n){var e=n.flags,t=n.myCanvas,r=n.stack,a=(n.filesManage,this.loadImg.files[0]);this.newImg=document.createElement("img"),this.newImg.src=window.URL.createObjectURL(a),t.clearCanvas(n),this.updateHrefOnCanvas(t.canvas),this.newImg.onload=function(){t.canvas.width=this.naturalWidth,t.canvas.height=this.naturalHeight,t.ctx.drawImage(this,0,0),e.isRepaint||r.setStory("newImg")}}}])&&c(e.prototype,t),n}();function l(n,e){for(var t=0;t<e.length;t++){var r=e[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(n,r.key,r)}}var u=function(){function n(){!function(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}(this,n),this.story=[],this.lineStory=[]}var e,t;return e=n,(t=[{key:"getStory",value:function(){this.story=JSON.parse(localStorage.getItem("story"))||[]}},{key:"setStory",value:function(n){this.getStory(),this.story.push(n),localStorage.setItem("story",JSON.stringify(this.story))}},{key:"saveLineStory",value:function(){this.setStory(this.lineStory)}},{key:"removeStory",value:function(){this.clearLocalStory(),localStorage.removeItem("story")}},{key:"saveToLineStory",value:function(n){this.lineStory.push(n)}},{key:"clearLocalStory",value:function(){this.story=[],this.lineStory=[]}},{key:"removeLastCommand",value:function(){this.getStory(),this.story.pop(),localStorage.setItem("story",JSON.stringify(this.story))}}])&&l(e.prototype,t),n}(),d=new o,f=new s(d),g=new A,p=new u,h={isOverCanvas:!1,isDragging:!1,isRepaint:!1,isErasing:!1,isOnErase:!1,isMobile:window.screen.width<768},C={flags:h,myCanvas:d,drawing:f,filesManage:g,stack:p};d.undoBtn.onclick=function(){return d.undo(C)},g.loadImg.oninput=function(){return g.loadImgFromHDD(C)},d.clearBtn.onclick=function(){return d.clearCanvas(C)},f.rad.oninput=function(){return f.radius=f.rad.value},f.col.oninput=function(){return f.color=f.col.value},d.eraserBtn.onclick=function(){return d.eraser(C)},d.invert.onclick=function(){return d.colorInvert(C)},d.canvas.onmouseover=function(){return h.isOverCanvas=!0},d.canvas.addEventListener("mousedown",(function(n){return f.engage(n,C)})),d.canvas.addEventListener("mousedown",(function(n){return f.drawPoint(n,C)})),d.canvas.onmouseup=function(n){return f.disengage(n,C)},d.canvas.addEventListener("mousemove",(function(n){return f.drawPoint(n,C)})),p.removeStory(),d.clearCanvas(C)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,